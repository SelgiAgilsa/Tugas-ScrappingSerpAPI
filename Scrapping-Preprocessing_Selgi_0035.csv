""
""
"pip install google-search-results"
""
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps"","
"""q"": ""seafood"","
"""ll"": ""@-6.9858634,110.4143039,15z"","
"""type"": ""search"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"local_results = results[""local_results""]"
""
"local_results"
""
"#1"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b65dbb245b1:0x103f66b6b46352c9"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#2"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e70f35155cf271b:0xa332a964871467df"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#3"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b52fbb8f8cb:0xf3619b2663879b1d"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#4"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b7b086b1611:0x69aeb4e2405ca6cb"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#5"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b4b478a2ca9:0x788f2ce3e8601338"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#6"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708be591cbc467:0xe11969f813f6fdca"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#7"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b60ed5934b7:0x768c954d9327fc91"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#8"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e70f355c1610aa7:0xf8c6538e7d1a2419"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#9"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e70f5e1ff65d3a7:0x8b26c25e227177a"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"#10"
"from serpapi import GoogleSearch"
"params = {"
"""engine"": ""google_maps_reviews"","
"""data_id"": ""0x2e708b5c6690e8eb:0x26d4ecbee47ba053"","
"""api_key"": ""6f05e5ec5ce56e0fb8fba0512cfd883aaab66a5aad2bfa533ab36357e84e1f02"""
"}"
"search = GoogleSearch(params)"
"results = search.get_dict()"
"reviews = results[""reviews""][1][""snippet""]"
""
"results"
""
"for i in range(10):"
"rating = results [""reviews""][i][""rating""]"
"print(rating)"
"reviews = results [""reviews""][i][""snippet""]"
"print(reviews)"
""
"# >>>>> CASE FOLDING <<<<< #"
""
"# 1. Mengubah text menjadi lowercase"
"kalimat = ""5.0 AWESOME!!! The shrimp paste sauce is delicious, grilled squid, carp, shrimp penyet & grilled shrimp are super delicious"""
"lower_case = kalimat.lower()"
"print(lower_case)"
""
"5.0 awesome!!! the shrimp paste sauce is delicious, grilled squid, carp, shrimp penyet & grilled shrimp are super delicious"
""
"# 2. Menghapus angka"
"import re #impor modul regular expressio"
"kalimat = ""5.0 This is the most favorite overhang seafood food. The most I recommend 1. Grilled squid 2. Shrimp Pecel (boiled / fried) If you come here, don't forget to order the chili sauce. Mak nyusssss really ... Sometimes if you are crowded you have to wait patiently But it's worthed 🤤🤤🤤🤤🤤🤤 """
"hasil = re.sub(r""\d+"","""", kalimat)"
"print (hasil)"
""
". This is the most favorite overhang seafood food. The most I recommend . Grilled squid . Shrimp Pecel (boiled / fried) If you come here, don't forget to order the chili sauce. Mak nyusssss really ... Sometimes if you are crowded you have to wait patiently But it's worthed 🤤🤤🤤🤤🤤🤤"
""
"# 3. Menghapus tanda baca"
"import string"
"kalimat = ""5.0 The sweet and sour sauce seasoning is delicious...the fried catfish is perfect....cheap price but good quality"""
"hasil = kalimat.translate(str.maketrans("""","""",string.punctuation))"
"print (hasil)"
""
"50 The sweet and sour sauce seasoning is deliciousthe fried catfish is perfectcheap price but good quality"
""
"# >>>>> TOKENIZING <<<<< #"
""
"import nltk"
"nltk.download('book')"
"#or"
"nltk.download('tests')"
"#or"
"nltk.download('all-corpora')# not recommended as it download huge amount of data."
""
"# impor word_tokenize dari modul nltk"
"from nltk.tokenize import sent_tokenize, word_tokenize"
"kalimat = ""5.0 It serves one of the best seafood in Semarang"""
"tokens = word_tokenize(kalimat)"
"print(tokens)"
""
"['5.0', 'It', 'serves', 'one', 'of', 'the', 'best', 'seafood', 'in', 'Semarang']"
""
"# >>>>> STOPWORD REMOVAL(FILTERING) <<<<< #"
""
"# Filtering dengan sastrawi"
"!pip install Sastrawi"
""
"# Daftar stopword yang tersedia di library Sastrawi"
"from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory"
"factory = StopWordRemoverFactory()"
"stopwords = factory.get_stop_words()"
"print(stopwords)"
""
"['yang', 'untuk', 'pada', 'ke', 'para', 'namun', 'menurut', 'antara', 'dia', 'dua', 'ia', 'seperti', 'jika', 'jika', 'sehingga', 'kembali', 'dan', 'tidak', 'ini', 'karena', 'kepada', 'oleh', 'saat', 'harus', 'sementara', 'setelah', 'belum', 'kami', 'sekitar', 'bagi', 'serta', 'di', 'dari', 'telah', 'sebagai', 'masih', 'hal', 'ketika', 'adalah', 'itu', 'dalam', 'bisa', 'bahwa', 'atau', 'hanya', 'kita', 'dengan', 'akan', 'juga', 'ada', 'mereka', 'sudah', 'saya', 'terhadap', 'secara', 'agar', 'lain', 'anda', 'begitu', 'mengapa', 'kenapa', 'yaitu', 'yakni', 'daripada', 'itulah', 'lagi', 'maka', 'tentang', 'demi', 'dimana', 'kemana', 'pula', 'sambil', 'sebelum', 'sesudah', 'supaya', 'guna', 'kah', 'pun', 'sampai', 'sedangkan', 'selagi', 'sementara', 'tetapi', 'apakah', 'kecuali', 'sebab', 'selain', 'seolah', 'seraya', 'seterusnya', 'tanpa', 'agak', 'boleh', 'dapat', 'dsb', 'dst', 'dll', 'dahulu', 'dulunya', 'anu', 'demikian', 'tapi', 'ingin', 'juga', 'nggak', 'mari', 'nanti', 'melainkan', 'oh', 'ok', 'seharusnya', 'sebetulnya', 'setiap', 'setidaknya', 'sesuatu', 'pasti', 'saja', 'toh', 'ya', 'walau', 'tolong', 'tentu', 'amat', 'apalagi', 'bagaimanapun']"
""
"# imort StopWordRemoverFactory class"
"from Sastrawi.StopWordRemover.StopWordRemoverFactory import StopWordRemoverFactory"
"factory = StopWordRemoverFactory()"
"stopword = factory.create_stop_word_remover()"
"# Kalimat"
"kalimat = ""Salahsatu tempat makan olahan seafood andalan ku. Rasanya pas, paling suka sama cuminya. Pelayanan tempat makan nya juga bagus. Sesuai lah kalo dpt bintang lima 👍 semoga service nya terus baik dan tambah baik ⭐️⭐️⭐️⭐️⭐️"""
"stop = stopword.remove(kalimat)"
"print(stop)"
""
"Salahsatu tempat makan olahan seafood andalan ku. Rasanya pas, paling suka sama cuminya. Pelayanan tempat makan nya bagus. Sesuai lah kalo dpt bintang lima 👍 semoga service nya terus baik tambah baik ⭐️⭐️⭐️⭐️⭐️"
""
"# >>>>> STEMMING <<<<< #"
""
"# Stemming dengan sastrawi"
"!pip install Sastrawi"
""
"# import StemmerFactory class"
"from Sastrawi.Stemmer.StemmerFactory import StemmerFactory"
"factory = StemmerFactory()"
"stemmer = factory.create_stemmer()"
"kalimat = 'Ini rasanya enak banget walaupun pesan tanpa MSG. Porsinya besar, jadi bisa dimakan rame-rame sekeluarga.'"
"hasil = stemmer.stem(kalimat)"
"print(hasil)"
""
"ini rasa enak banget walaupun pesan tanpa msg porsi besar jadi bisa makan rame-rame keluarga"
